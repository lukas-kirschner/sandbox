on: [ push, pull_request ]

name: Rust Toolchain

env:
  LD_LIBRARY_PATH: "target/debug/deps:target/release/deps:${GITHUB_WORKSPACE}/target/debug/deps:${GITHUB_WORKSPACE}/target/release/deps:${HOME}/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib:${LD_LIBRARY_PATH}"
  SANDBOX_BUILD_NUMBER: ${{ github.run_number }}

jobs:
  fmt:
    name: Check Formatting Rules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
          lfs: true
          submodules: true
      - name: Install Stable Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: "rustup component add rustfmt"
      - name: Check RustFMT
        uses: actions-rs/cargo@v1
        with:
          command: "fmt"
          args: "--all -- --check"
  clippy:
    name: "Cargo Clippy"
    runs-on: "ubuntu-latest"
    steps:
      - name: Install Dependencies
        run: sudo apt-get install -y libxkbcommon-dev libfontconfig1-dev libsdl2-dev
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
          lfs: true
          submodules: true
      - uses: "actions-rs/toolchain@v1"
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true
      - run: "rustup component add clippy"
      - uses: "actions-rs/cargo@v1"
        with:
          command: "clippy"
          args: "-- -D warnings"
  check:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Install Dependencies
        run: sudo apt-get install -y libxkbcommon-dev libfontconfig1-dev lcov libsdl2-dev
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
          lfs: true
          submodules: true
      - name: Install Stable Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info -- --test-threads 1
      - name: Upload code coverage results
        uses: zgosalvez/github-actions-report-lcov@v4
        with:
          coverage-files: lcov.info
          minimum-coverage: 0
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./
          update-comment: true
          title-prefix: "sandbox"
          additional-message: "Coverage Result for Linux x64 Unit Tests"
  build_linux64:
    name: Build Nightly for Linux x64
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: sudo apt-get install -y libxkbcommon-dev libfontconfig1-dev libsdl2-dev
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
          lfs: true
          submodules: true
      - name: Install Stable Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build Nightly in Release Mode
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sandbox-linux-x64
          path: |
            target/release/sandbox
#            target/release/assets
  build_win64:
    name: Build Nightly for Windows x64
    runs-on: windows-latest
    env:
      SDL_VERSION: 2.26.0
    steps:
      - uses: actions/checkout@v4
      # Thanks https://github.com/TerryCavanagh/VVVVVV/blob/master/.github/workflows/ci.yml
      - name: Cache SDL
        id: cache-windows-sdl
        uses: actions/cache@v3
        env:
          cache-name: cache-sdl
        with:
          path: C:\SDL2-*
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.SDL_VERSION }}

    - if: ${{ steps.cache-windows-sdl.outputs.cache-hit != 'true' }}
      name: Download SDL if not cached
      run: |
        Invoke-WebRequest "https://github.com/libsdl-org/SDL/releases/download/release-$env:SDL_VERSION/SDL2-devel-$env:SDL_VERSION-VC.zip" -OutFile C:\SDL.zip
        Expand-Archive C:\SDL.zip -DestinationPath C:\
    - run: rustup update stable
    - run: |
      xcopy C:\SDL2-$env:SDL_VERSION\lib\x64\SDL2.dll .
      xcopy C:\SDL2-$env:SDL_VERSION\lib\x64\SDL2.lib .
    - run: cargo build --release
    - run: xcopy SDL2.dll target\release\
    - uses: actions/upload-artifact@v4
      with:
        name: sandbox-windows-x64
        path: |
          target/release/sandbox.exe
          target/release/SDL2.dll